// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

library MathLibrary {
    function sqrt(uint256 x) public pure returns (uint256) {
        uint256 z = (x + 1) / 2;
        uint256 y = x;
        while (z < y) {
            y = z;
            z = (x / z + z) / 2;
        }
        return y;
    }

    function abs(int256 x) public pure returns (int256) {
        return x < 0 ? -x : x;
    }

    function square(int256 x) public pure returns (int256) {
        return x * x;
    }

    function max(int256 a, int256 b) public pure returns (int256) {
        return a > b ? a : b;
    }

    function min(int256 a, int256 b) public pure returns (int256) {
        return a < b ? a : b;
    }
}